name: Type Script CI/CD App
on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ts-app-build-${{ matrix.node }}
          path: ./dist

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - name: tests
        run: npm test

  dockerjob:
    needs: [build, test]
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ts-app-build-18
          path: ./dist
      - name: Build Docker image
        run: |
          docker build -t ts-app-demo .
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: |
          docker tag ts-app-demo:latest ${{ secrets.DOCKER_USERNAME }}/ts-app-demo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ts-app-demo:latest
  
  deploy:
    needs: dockerjob
    runs-on: ubuntu-latest
    env:
      environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      API_URL: ${{ vars.API_URL }}
      DB_NAME: ${{ vars.DB_NAME }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Print
        run: |
          echo "Deploying to ${{env.environment}} server..."
          echo "API_URL: ${{ env.API_URL }}"
          echo "DB_NAME: ${{ env.DB_NAME }}"
          echo "Deployment complete."